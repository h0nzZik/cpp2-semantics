#!/usr/bin/env bash

# https://stackoverflow.com/a/246128/6209703
KCPP2_SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

KCPP2_INSTALL_PREFIX=$(realpath "$KCPP2_SCRIPT_DIR/..")
KCPP2_PARSER_DIR="$KCPP2_INSTALL_PREFIX/lib/kcpp2/parser/parsing-kompiled"
KCPP2_SEMANTICS_DIR="$KCPP2_INSTALL_PREFIX/lib/kcpp2/semantics/cpp2-kompiled"

set -eu

# Parse arguments
# https://github.com/util-linux/util-linux/blob/master/misc-utils/getopt-example.bash
TEMP=$(getopt --long 'stop-after-disambiguation,disambiguation-depth:' -n 'kcpp2' -- "$@")

if [ $? -ne 0 ]; then
	echo 'Terminating...' >&2
	exit 1
fi

eval set -- "$TEMP"
unset TEMP

STOP_AFTER_DISAMBIGUATION=
DISAMBIGUATE_DEPTH=
INPUT_FILE=

while true; do
	case "$1" in
		'--stop-after-disambiguation')
			echo 'Only parse'
            STOP_AFTER_DISAMBIGUATION="1"
            shift
			continue
		;;
		'--disambiguation-depth')
            DISAMBIGUATE_DEPTH="$2"
			shift 2
			continue
		;;
		'--')
			shift
			break
		;;
        *)
			break
        ;;
	esac
done

parse() {
    echo 'Parsing';
    local input_file="$1";
    local output_file="$2";
    kparse --definition "$KCPP2_PARSER_DIR" --output-file "$output_file" "$input_file";
}

disambiguate() {
    echo 'Disambiguating';
    local input_file="$1";
    local output_file="$2";
    local krun_args=(--definition "$KCPP2_PARSER_DIR" --output kore --output-file "$output_file")
    if [ -n "$DISAMBIGUATE_DEPTH" ]; then
        krun_args+=(--depth "$DISAMBIGUATE_DEPTH");
    fi
    krun_args+=(--parser cat "$input_file")
    krun ${krun_args[*]};
}

run()          {
    echo 'Running';
    krun --definition "$KCPP2_SEMANTICS_DIR" --parser cat "$1" ;
}


# TODO: work with temporary directories

input_pgm="$1"; shift
parse "$input_pgm" "$input_pgm".deparametrized.kore
disambiguate "$input_pgm".deparametrized.kore "$input_pgm".disambiguated.kore

if [ -n "$STOP_AFTER_DISAMBIGUATION" ]; then
    exit 0;
fi

prefix="Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDeclarations{}, SortKItem{}}("
suffix="),dotk{}()))),Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}(\"0\")))"
string=$(cat "$input_pgm".disambiguated.kore)
foo=${string#"$prefix"}
foo=${foo%"$suffix"}
echo "inj{SortDeclarations{}, SortTranslationUnit{}}(${foo})" > "$input_pgm".disambiguated.stripped.kore

run "$input_pgm".disambiguated.stripped.kore
